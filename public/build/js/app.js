const initialStep = 1, finalStep = 3; let step = 1; const appointment = { id: "", name: "", date: "", time: "", services: [] }; function startApp() { showSection(), tabs(), paginatorButtons(), nextPage(), previousPage(), queryAPI(), customerId(), customerName(), selectDate(), selectTime(), showSummary() } function showSection() { const e = document.querySelector(".show"); e && e.classList.remove("show"); const t = "#step-" + step; document.querySelector(t).classList.add("show"); const n = document.querySelector(".current"); n && n.classList.remove("current"); document.querySelector(`[data-step="${step}"]`).classList.add("current") } function tabs() { document.querySelectorAll(".tabs button").forEach(e => { e.addEventListener("click", (function (e) { step = parseInt(e.target.dataset.step), showSection(), paginatorButtons() })) }) } function paginatorButtons() { const e = document.querySelector("#next"), t = document.querySelector("#previous"); 1 === step ? (t.classList.add("hide"), e.classList.remove("hide")) : 3 === step ? (t.classList.remove("hide"), e.classList.add("hide"), showSummary()) : (t.classList.remove("hide"), e.classList.remove("hide")), showSection() } function previousPage() { document.querySelector("#previous").addEventListener("click", (function () { step <= 1 || (step--, paginatorButtons()) })) } function nextPage() { document.querySelector("#next").addEventListener("click", (function () { step >= 3 || (step++, paginatorButtons()) })) } async function queryAPI() { try { const e = "https://rbm-appsalon.herokuapp.com/api/services", t = await fetch(e); showServices(await t.json()) } catch (e) { console.log(e) } } function showServices(e) { e.forEach(e => { const { id: t, name: n, price: o } = e, s = document.createElement("P"); s.classList.add("service-name"), s.textContent = n; const c = document.createElement("P"); c.classList.add("service-price"), c.textContent = "$" + o; const a = document.createElement("DIV"); a.classList.add("service"), a.dataset.serviceId = t, a.onclick = function () { selectService(e) }, a.appendChild(s), a.appendChild(c), document.querySelector("#services").appendChild(a) }) } function selectService(e) { const { id: t } = e, { services: n } = appointment, o = document.querySelector(`[data-service-id="${t}"]`); n.some(e => e.id === t) ? (appointment.services = n.filter(e => e.id !== t), o.classList.remove("selected")) : (appointment.services = [...n, e], o.classList.add("selected")) } function customerId() { appointment.id = document.querySelector("#id").value } function customerName() { appointment.name = document.querySelector("#name").value } function selectDate() { document.querySelector("#date").addEventListener("input", (function (e) { const t = new Date(e.target.value).getUTCDay();[6, 0].includes(t) ? (e.target.value = "", showAlert("Sorry, we're closed on weekends", "error", ".form")) : appointment.date = e.target.value })) } function selectTime() { document.querySelector("#time").addEventListener("input", (function (e) { const t = e.target.value.split(":")[0]; t < 10 || t > 20 ? (e.target.value = "", showAlert("Sorry, we're closed at this time", "error", ".form")) : appointment.time = e.target.value })) } function showAlert(e, t, n, o = !0) { const s = document.querySelector(".alert"); s && s.remove(); const c = document.createElement("DIV"); c.textContent = e, c.classList.add("alert"), c.classList.add(t); document.querySelector(n).appendChild(c), o && setTimeout(() => { c.remove() }, 3e3) } function showSummary() { const e = document.querySelector(".content-summary"); for (; e.firstChild;)e.removeChild(e.firstChild); if (Object.values(appointment).includes("") || 0 === appointment.services.length) return void showAlert("You selected no services or appointment data is missing", "error", ".content-summary", !1); const { name: t, date: n, time: o, services: s } = appointment, c = document.createElement("H3"); c.textContent = "Service Summary", e.appendChild(c), s.forEach(t => { const { id: n, price: o, name: s } = t, c = document.createElement("DIV"); c.classList.add("content-service"); const a = document.createElement("P"); a.textContent = s; const i = document.createElement("P"); i.innerHTML = "<span>Price:</span> $" + o, c.appendChild(a), c.appendChild(i), e.appendChild(c) }); const a = document.createElement("H3"); a.textContent = "Appointment Summary", e.appendChild(a); const i = document.createElement("P"); i.innerHTML = "<span>Name:</span> " + t; const r = new Date(n), d = r.getDate(), m = r.getMonth(), l = r.getFullYear(), u = new Date(Date.UTC(l, m, d)).toLocaleDateString("en-GB", { weekday: "long", day: "numeric", month: "long", year: "numeric" }), p = document.createElement("P"); p.innerHTML = "<span>Date:</span> " + u; const h = document.createElement("P"); h.innerHTML = "<span>Time:</span> " + o; const v = document.createElement("BUTTON"); v.classList.add("button"), v.textContent = "Book Appointment", v.onclick = bookAppointment, e.appendChild(i), e.appendChild(p), e.appendChild(h), e.appendChild(v) } async function bookAppointment() { const { name: e, date: t, time: n, services: o, id: s } = appointment, c = o.map(e => e.id), a = new FormData; a.append("date", t), a.append("time", n), a.append("userId", s), a.append("services", c); try { const e = "https://rbm-appsalon.herokuapp.com/api/appointments", t = await fetch(e, { method: "POST", body: a }); (await t.json()).result && Swal.fire({ icon: "success", title: "Appointment Confirmed", text: "Your appointment was successfully confirmed" }).then(() => { setTimeout(() => { window.location.reload() }, 3e3) }) } catch (e) { Swal.fire({ icon: "error", title: "Error", text: "There was an error while booking the appointment" }) } } document.addEventListener("DOMContentLoaded", (function () { startApp() }));